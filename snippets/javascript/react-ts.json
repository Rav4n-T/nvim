{
  "reactFunctionComponent": {
    "prefix": "rfc",
    "body": [
			"",
			"export default function ${TM_FILENAME_BASE}() {",
			"\treturn (",
			"\t\t<div>",
			"\t\t\t$0",
			"\t\t</div>",
			"\t)",
			"}"
		],
    "description": "Creates a React functional component without PropTypes"
 },
  "reactRouterComponent": {
    "prefix": "rrc",
    "body": [
			"import App from 'App'",
			"import {FC, lazy, Suspense} from 'react'",
			"import {BrowserRouter as Router, Routes, Route} from 'react-router-dom'",
			"",
			"interface IRoute {",
			"\tpath: string;",
			"\tcomponent: FC;",
			"\tchildren?: IRoute[];",
			"}",
			"",
			"const routesArr: IRoute[] = [",
			"\t{path:'/', component: App, children:[",
			"\t\t${1:childComponent}",
			"\t]},",
			"\t${0:OtherComponent}",
			"]",
			"",
			"const AllRouter = () => (",
			"\t<Router>",
			"\t\t<Suspense fallback={}>",
			"\t\t\t<Routes>",
			"\t\t\t\t{",
			"\t\t\t\t\troutesArr.map((item,index) => {",
			"\t\t\t\t\t\treturn (",
			"\t\t\t\t\t\t\titem.children ?",
			"\t\t\t\t\t\t\t<Route key={index} path={item.path} element={<item.component />}>",
			"\t\t\t\t\t\t\t\t{",
			"\t\t\t\t\t\t\t\t\titem.children.map((e,i) => <Route key={i} path={e.path} element={<e.component />}></Route>)",
			"\t\t\t\t\t\t\t\t}",
			"\t\t\t\t\t\t\t</Route>",
			"\t\t\t\t\t\t\t:",
			"\t\t\t\t\t\t\t<Route key={index} path={item.path} element={<item.component />}></Route>",
			"\t\t\t\t\t\t)",
			"\t\t\t\t\t})",
			"\t\t\t\t}",
			"\t\t\t</Routes>",
			"\t\t</Suspense>",
			"\t</Router>",
			")",
			"",
			"export default AllRouter;"
		],
    "description": "Creates a React Router file with react-router-dom "
  }
}
