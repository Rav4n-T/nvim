{
  "New Solidjs Function": {
    "prefix": "nsf",
    "body": [
      "",
      "const ${1:$TM_FILENAME_BASE}$2 = ($3) => {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t${1:$TM_FILENAME_BASE}$0",
      "\t\t</>",
      "\t);",
      "};",
      "",
      "export default ${1:$TM_FILENAME_BASE};"
    ]
  },
  "Solidjs Create Signal": {
    "prefix": "scs",
    "body": [
      "const [$1, $2] = createSignal(${0:0})"
    ]
  },
  "Solidjs Create Effect": {
    "prefix": "sce",
    "body": [
      "createEffect(() => {",
      "\t$1",
      "})"
    ]
  },
  "Solidjs Create Memo": {
    "prefix": "scm",
    "body": [
      "const $1 = createMemo(() => {",
      "\t$2",
      "\treturn $3",
      "})"
    ]
  },
  "Solidjs Show": {
    "prefix": "sshow",
    "body": [
      "<Show",
      "\twhen={${1:true}}",
      ">",
      "\t${2:*}",
      "</Show>"
    ]
  },
  "Solidjs For": {
    "prefix": "sfor",
    "body": [
      "<For each={$1}>",
      "\t{(${2:item},i) => (",
      "\t\t$0",
      "\t)}",
      "</For>"
    ]
  },
  "Solidjs Index": {
    "prefix": "sindex",
    "body": [
      "<Index each={$1}>",
      "\t{(${2:item},i) => (",
      "\t\t$0",
      "\t)}",
      "</Index>"
    ]
  },
  "Solidjs Switch": {
    "prefix": "sswitch",
    "body": [
      "<Switch fallback={${1:<></>}}>",
      "\t<Match when={${2:true}}>",
      "\t\t$3",
      "\t</Match>",
      "\t<Match when={${4:true}}>",
      "\t\t$5",
      "\t</Match>$0",
      "</Switch>"
    ]
  }
}
